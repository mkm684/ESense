{"version":3,"file":"react-component-queries.js","sources":["../src/utils/mergeWith.js","../src/utils/getDisplayName.js","../src/utils/shallowEqual.js","../src/componentQueries.js"],"sourcesContent":["// :: (Object, Object, (any, any) => any) => Object\nconst mergeWith = (x, y, fn) => {\n  const result = Object.assign({}, x)\n\n  Object.keys(y).forEach(key => {\n    if (x[key] && y[key]) {\n      result[key] = fn(x[key], y[key], key)\n    } else {\n      result[key] = y[key]\n    }\n  })\n\n  return result\n}\n\nexport default mergeWith\n","// :: Component => String\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\nexport default getDisplayName\n","// Taken from react-redux.  Thanks Dan!\n\nexport default function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true\n  }\n\n  const keysA = Object.keys(objA)\n  const keysB = Object.keys(objB)\n\n  if (keysA.length !== keysB.length) {\n    return false\n  }\n\n  // Test for A's keys different from B.\n  const hasOwn = Object.prototype.hasOwnProperty\n  for (let i = 0; i < keysA.length; i += 1) {\n    // eslint-disable-line no-plusplus\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false\n    }\n  }\n\n  return true\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport invariant from 'invariant'\nimport sizeMe from 'react-sizeme'\nimport mergeWith from './utils/mergeWith'\nimport getDisplayName from './utils/getDisplayName'\nimport shallowEqual from './utils/shallowEqual'\n\nconst defaultConfig = {\n  monitorHeight: false,\n  monitorWidth: true,\n  refreshRate: 16,\n  pure: true,\n  noPlaceholder: false,\n}\n\nconst defaultConflictResolver = (x, y) => y\n\nconst defaultSizeMeConfig = () => ({\n  monitorWidth: defaultConfig.monitorWidth,\n  monitorHeight: defaultConfig.monitorHeight,\n  refreshRate: defaultConfig.refreshRate,\n})\n\n/**\n * :: Queries -> Component -> Component\n *\n * This is a HOC that provides you with the mechanism to specify Component\n * queries. A Component query is a similar concept to media queries except it\n * operates on the Component's width/height rather than the entire viewport\n * width/height.\n */\nfunction componentQueries(...params) {\n  let queries\n  let sizeMeConfig\n  let pure\n  let conflictResolver\n\n  if (params.length === 1 && params[0].queries) {\n    queries = params[0].queries || []\n    if (params[0].sizeMeConfig) {\n      // Old school config style.\n      sizeMeConfig = params[0].sizeMeConfig || defaultSizeMeConfig()\n      pure = defaultConfig.pure // this didn't exist before, so we default it.\n    } else if (params[0].config) {\n      // New school config style.\n      pure = params[0].config.pure\n      const {\n        monitorHeight,\n        monitorWidth,\n        refreshRate,\n        refreshMode,\n        noPlaceholder,\n      } = params[0].config\n      sizeMeConfig = {\n        monitorHeight:\n          monitorHeight != null ? monitorHeight : defaultConfig.monitorHeight,\n        monitorWidth:\n          monitorWidth != null ? monitorWidth : defaultConfig.monitorWidth,\n        refreshRate:\n          refreshRate != null ? refreshRate : defaultConfig.refreshRate,\n        refreshMode:\n          refreshMode != null ? refreshMode : defaultConfig.refreshMode,\n        noPlaceholder:\n          noPlaceholder != null ? noPlaceholder : defaultConfig.noPlaceholder,\n      }\n    }\n    conflictResolver =\n      conflictResolver || params[0].conflictResolver || defaultConflictResolver\n    invariant(\n      typeof conflictResolver === 'function',\n      'The conflict resolver you provide to ComponentQueries should be a function.',\n    )\n    invariant(\n      Array.isArray(queries),\n      '\"queries\" must be provided as an array when using the complex configuration.',\n    )\n  } else {\n    queries = params\n  }\n\n  // TODO: Consider removing this check.  Perhaps it's best to just silently\n  // pass through if no queries were provided?  Maybe a development based\n  // warning would be the most useful.\n  invariant(\n    queries.length > 0,\n    'You must provide at least one query to ComponentQueries.',\n  )\n  invariant(\n    queries.filter(q => typeof q !== 'function').length === 0,\n    'All provided queries for ComponentQueries should be functions.',\n  )\n\n  // We will default out any configuration if it wasn't set.\n  sizeMeConfig = sizeMeConfig || defaultSizeMeConfig()\n  conflictResolver = conflictResolver || defaultConflictResolver\n  pure = pure != null ? pure : defaultConfig.pure\n\n  const mergeWithCustomizer = (x, y, key) => {\n    if (x === undefined) return undefined\n    return conflictResolver(x, y, key)\n  }\n\n  return function WrapComponent(WrappedComponent) {\n    class ComponentWithComponentQueries extends Component {\n      static displayName = `ComponentQueries(${getDisplayName(\n        WrappedComponent,\n      )})`\n\n      static propTypes = {\n        size: PropTypes.shape({\n          width: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n          height: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n        }).isRequired,\n      }\n\n      static WrappedComponent = WrappedComponent\n\n      state = {\n        queryResult: {},\n      }\n\n      componentWillMount() {\n        const { size, ...otherProps } = this.props\n        this.runQueries(size, otherProps)\n      }\n\n      componentWillReceiveProps(nextProps) {\n        const { size } = this.props\n        const { size: nextSize, ...nextOtherProps } = nextProps\n\n        if (!shallowEqual(size, nextSize)) {\n          this.runQueries(nextSize, nextOtherProps)\n        }\n      }\n\n      shouldComponentUpdate(nextProps, nextState) {\n        const {\n          size, // eslint-disable-line no-unused-vars\n          ...otherProps\n        } = this.props\n        const {\n          size: nextSize, // eslint-disable-line no-unused-vars\n          ...nextOtherProps\n        } = nextProps\n\n        return (\n          !pure ||\n          !shallowEqual(otherProps, nextOtherProps) ||\n          !shallowEqual(this.state.queryResult, nextState.queryResult)\n        )\n      }\n\n      runQueries({ width, height }, otherProps) {\n        const queryResult = queries.reduce(\n          (acc, cur) =>\n            mergeWith(\n              acc,\n              cur(\n                {\n                  width: sizeMeConfig.monitorWidth ? width : null,\n                  height: sizeMeConfig.monitorHeight ? height : null,\n                },\n                otherProps,\n              ),\n              mergeWithCustomizer,\n            ),\n          {},\n        )\n\n        this.setState({ queryResult })\n      }\n\n      render() {\n        const {\n          size, // eslint-disable-line no-unused-vars\n          ...otherProps\n        } = this.props\n\n        const allProps = mergeWith(\n          this.state.queryResult,\n          otherProps,\n          mergeWithCustomizer,\n        )\n\n        return <WrappedComponent {...allProps} />\n      }\n    }\n\n    return sizeMe(sizeMeConfig)(ComponentWithComponentQueries)\n  }\n}\n\nexport default componentQueries\n"],"names":["mergeWith","x","y","fn","result","Object","assign","keys","forEach","key","getDisplayName","WrappedComponent","displayName","name","shallowEqual","objA","objB","keysA","keysB","length","hasOwn","prototype","hasOwnProperty","i","call","defaultConfig","defaultConflictResolver","defaultSizeMeConfig","monitorWidth","monitorHeight","refreshRate","componentQueries","queries","sizeMeConfig","pure","conflictResolver","params","config","refreshMode","noPlaceholder","Array","isArray","filter","q","mergeWithCustomizer","undefined","WrapComponent","ComponentWithComponentQueries","state","props","size","otherProps","runQueries","nextProps","nextSize","nextOtherProps","nextState","queryResult","width","height","reduce","acc","cur","setState","allProps","React","Component","propTypes","PropTypes","shape","number","isRequired","sizeMe"],"mappings":"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"}