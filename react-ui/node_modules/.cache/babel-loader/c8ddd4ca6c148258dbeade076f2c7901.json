{"ast":null,"code":"import _objectSpread from \"/home/mohamed/projects/sap/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/mohamed/projects/sap/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/mohamed/projects/sap/react-reduction/src/pages/ChartPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { getColor } from 'utils/colors';\nimport { randomNum } from 'utils/demos';\nimport { Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-plugin-streaming';\nimport Page from 'components/Page';\nvar MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\nvar getData = function getData() {\n  var res;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get('/result'));\n\n        case 3:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          alert('Oh hey. Something went wrong...');\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]]);\n};\n\nvar genLineData = function genLineData() {\n  var moreData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var moreData2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    labels: MONTHS,\n    datasets: [_objectSpread({\n      label: 'Dataset 1',\n      backgroundColor: getColor('primary'),\n      borderColor: getColor('primary'),\n      borderWidth: 1,\n      data: []\n    }, moreData), _objectSpread({\n      label: 'Dataset 2',\n      backgroundColor: getColor('secondary'),\n      borderColor: getColor('secondary'),\n      borderWidth: 1,\n      data: []\n    }, moreData2)]\n  };\n};\n\nvar options = {\n  scales: {\n    xAxes: [{\n      type: \"realtime\",\n      realtime: {\n        onRefresh: function onRefresh() {\n          genLineData.datasets[0].data.push({\n            x: Date.now(),\n            y: Math.random() * 100\n          });\n        },\n        delay: 2000\n      }\n    }]\n  }\n};\n\nvar ChartPage = function ChartPage() {\n  return React.createElement(Page, {\n    title: \"Charts\",\n    breadcrumbs: [{\n      name: 'Charts',\n      active: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Stacked Line\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: genLineData(),\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))), React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Line\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: genLineData({\n      fill: false\n    }, {\n      fill: false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))))));\n};\n\nexport default ChartPage;","map":{"version":3,"sources":["/home/mohamed/projects/sap/react-reduction/src/pages/ChartPage.js"],"names":["React","axios","getColor","randomNum","Row","Col","Card","CardHeader","CardBody","Line","Page","MONTHS","getData","get","res","alert","genLineData","moreData","moreData2","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","options","scales","xAxes","type","realtime","onRefresh","push","x","Date","now","y","Math","random","delay","ChartPage","name","active","fill"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport { getColor } from 'utils/colors';\nimport { randomNum } from 'utils/demos';\n\nimport { Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\n\nimport {Line} from 'react-chartjs-2';\nimport 'chartjs-plugin-streaming';\n\nimport Page from 'components/Page';\n\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\nconst getData = async () => {\n\n    try {\n      const res = await axios.get('/result');\n      return res\n    } catch (err) {\n      alert('Oh hey. Something went wrong...');\n    }\n}\n\nconst genLineData = (moreData = {}, moreData2 = {}) => {\n  return {\n    labels: MONTHS,\n    datasets: [\n      {\n        label: 'Dataset 1',\n        backgroundColor: getColor('primary'),\n        borderColor: getColor('primary'),\n        borderWidth: 1,\n        data: [],\n        ...moreData,\n      },\n      {\n        label: 'Dataset 2',\n        backgroundColor: getColor('secondary'),\n        borderColor: getColor('secondary'),\n        borderWidth: 1,\n        data: [],\n        ...moreData2,\n      },\n    ],\n  };\n};\n\nconst options = {\n  scales: {\n    xAxes: [\n      {\n        type: \"realtime\",\n        realtime: {\n          onRefresh: function() {\n            genLineData.datasets[0].data.push({\n              x: Date.now(),\n              y: Math.random() * 100\n            });\n          },\n          delay: 2000\n        }\n      }\n    ]\n  }\n};\n\nconst ChartPage = () => {\n  return (\n    <Page title=\"Charts\" breadcrumbs={[{ name: 'Charts', active: true }]}>\n      <Row>\n        <Col xl={6} lg={12} md={12}>\n          <Card>\n            <CardHeader>Stacked Line</CardHeader>\n            <CardBody>\n              <Line\n                data={genLineData()}\n                options={options}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col xl={6} lg={12} md={12}>\n          <Card>\n            <CardHeader>Line</CardHeader>\n            <CardBody>\n              <Line data={genLineData({ fill: false }, { fill: false })} />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n};\n\nexport default ChartPage;\n"]},"metadata":{},"sourceType":"module"}