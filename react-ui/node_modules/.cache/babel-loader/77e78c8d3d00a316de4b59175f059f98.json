{"ast":null,"code":"// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\nexport var getColor = function getColor() {\n  var availableColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'primary';\n\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  var color = window.getComputedStyle(document.documentElement).getPropertyValue(\"--\".concat(availableColor));\n  return color;\n};\nexport var getThemeColors = function getThemeColors() {\n  return ['primary', 'secondary', 'success', 'info', 'warning', 'danger'];\n};","map":{"version":3,"sources":["/home/mohamed/projects/ESense/react-ui/src/utils/colors.js"],"names":["getColor","availableColor","window","color","getComputedStyle","document","documentElement","getPropertyValue","getThemeColors"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAgC;AAAA,MAA/BC,cAA+B,uEAAd,SAAc;;AACtD,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,IAAP;AACD;;AAED,MAAMC,KAAK,GAAGD,MAAM,CACjBE,gBADW,CACMC,QAAQ,CAACC,eADf,EAEXC,gBAFW,aAEWN,cAFX,EAAd;AAIA,SAAOE,KAAP;AACD,CAVM;AAYP,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,CAClC,SADkC,EAElC,WAFkC,EAGlC,SAHkC,EAIlC,MAJkC,EAKlC,SALkC,EAMlC,QANkC,CAAN;AAAA,CAAvB","sourcesContent":["// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n"]},"metadata":{},"sourceType":"module"}