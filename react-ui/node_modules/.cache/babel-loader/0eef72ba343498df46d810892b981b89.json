{"ast":null,"code":"var React = require('react');\n\nvar createReactClass = require('create-react-class');\n\nvar PropTypes = require('prop-types');\n\nvar merge = require('object-assign');\n\nvar NotificationContainer = require('./NotificationContainer');\n\nvar Constants = require('./constants');\n\nvar Styles = require('./styles');\n\nvar NotificationSystem = createReactClass({\n  uid: 3400,\n  _isMounted: false,\n  _getStyles: {\n    overrideStyle: {},\n    overrideWidth: null,\n    setOverrideStyle: function setOverrideStyle(style) {\n      this.overrideStyle = style;\n    },\n    wrapper: function wrapper() {\n      if (!this.overrideStyle) return {};\n      return merge({}, Styles.Wrapper, this.overrideStyle.Wrapper);\n    },\n    container: function container(position) {\n      var override = this.overrideStyle.Containers || {};\n      if (!this.overrideStyle) return {};\n      this.overrideWidth = Styles.Containers.DefaultStyle.width;\n\n      if (override.DefaultStyle && override.DefaultStyle.width) {\n        this.overrideWidth = override.DefaultStyle.width;\n      }\n\n      if (override[position] && override[position].width) {\n        this.overrideWidth = override[position].width;\n      }\n\n      return merge({}, Styles.Containers.DefaultStyle, Styles.Containers[position], override.DefaultStyle, override[position]);\n    },\n    elements: {\n      notification: 'NotificationItem',\n      title: 'Title',\n      messageWrapper: 'MessageWrapper',\n      dismiss: 'Dismiss',\n      action: 'Action',\n      actionWrapper: 'ActionWrapper'\n    },\n    byElement: function byElement(element) {\n      var self = this;\n      return function (level) {\n        var _element = self.elements[element];\n        var override = self.overrideStyle[_element] || {};\n        if (!self.overrideStyle) return {};\n        return merge({}, Styles[_element].DefaultStyle, Styles[_element][level], override.DefaultStyle, override[level]);\n      };\n    }\n  },\n  _didNotificationRemoved: function _didNotificationRemoved(uid) {\n    var notification;\n    var notifications = this.state.notifications.filter(function (toCheck) {\n      if (toCheck.uid === uid) {\n        notification = toCheck;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (this._isMounted) {\n      this.setState({\n        notifications: notifications\n      });\n    }\n\n    if (notification && notification.onRemove) {\n      notification.onRemove(notification);\n    }\n  },\n  getInitialState: function getInitialState() {\n    return {\n      notifications: []\n    };\n  },\n  propTypes: {\n    style: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    noAnimation: PropTypes.bool,\n    allowHTML: PropTypes.bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      style: {},\n      noAnimation: false,\n      allowHTML: false\n    };\n  },\n  addNotification: function addNotification(notification) {\n    var _notification = merge({}, Constants.notification, notification);\n\n    var notifications = this.state.notifications;\n    var i;\n\n    if (!_notification.level) {\n      throw new Error('notification level is required.');\n    }\n\n    if (Object.keys(Constants.levels).indexOf(_notification.level) === -1) {\n      throw new Error('\\'' + _notification.level + '\\' is not a valid level.');\n    } // eslint-disable-next-line\n\n\n    if (isNaN(_notification.autoDismiss)) {\n      throw new Error('\\'autoDismiss\\' must be a number.');\n    }\n\n    if (Object.keys(Constants.positions).indexOf(_notification.position) === -1) {\n      throw new Error('\\'' + _notification.position + '\\' is not a valid position.');\n    } // Some preparations\n\n\n    _notification.position = _notification.position.toLowerCase();\n    _notification.level = _notification.level.toLowerCase();\n    _notification.autoDismiss = parseInt(_notification.autoDismiss, 10);\n    _notification.uid = _notification.uid || this.uid;\n    _notification.ref = 'notification-' + _notification.uid;\n    this.uid += 1; // do not add if the notification already exists based on supplied uid\n\n    for (i = 0; i < notifications.length; i += 1) {\n      if (notifications[i].uid === _notification.uid) {\n        return false;\n      }\n    }\n\n    notifications.push(_notification);\n\n    if (typeof _notification.onAdd === 'function') {\n      notification.onAdd(_notification);\n    }\n\n    this.setState({\n      notifications: notifications\n    });\n    return _notification;\n  },\n  getNotificationRef: function getNotificationRef(notification) {\n    var self = this;\n    var foundNotification = null;\n    Object.keys(this.refs).forEach(function (container) {\n      if (container.indexOf('container') > -1) {\n        Object.keys(self.refs[container].refs).forEach(function (_notification) {\n          var uid = notification.uid ? notification.uid : notification;\n\n          if (_notification === 'notification-' + uid) {\n            // NOTE: Stop iterating further and return the found notification.\n            // Since UIDs are uniques and there won't be another notification found.\n            foundNotification = self.refs[container].refs[_notification];\n          }\n        });\n      }\n    });\n    return foundNotification;\n  },\n  removeNotification: function removeNotification(notification) {\n    var foundNotification = this.getNotificationRef(notification);\n    return foundNotification && foundNotification._hideNotification();\n  },\n  editNotification: function editNotification(notification, newNotification) {\n    var foundNotification = null; // NOTE: Find state notification to update by using\n    // `setState` and forcing React to re-render the component.\n\n    var uid = notification.uid ? notification.uid : notification;\n    var newNotifications = this.state.notifications.filter(function (stateNotification) {\n      if (uid === stateNotification.uid) {\n        foundNotification = stateNotification;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!foundNotification) {\n      return;\n    }\n\n    newNotifications.push(merge({}, foundNotification, newNotification));\n    this.setState({\n      notifications: newNotifications\n    });\n  },\n  clearNotifications: function clearNotifications() {\n    var self = this;\n    Object.keys(this.refs).forEach(function (container) {\n      if (container.indexOf('container') > -1) {\n        Object.keys(self.refs[container].refs).forEach(function (_notification) {\n          self.refs[container].refs[_notification]._hideNotification();\n        });\n      }\n    });\n  },\n  componentDidMount: function componentDidMount() {\n    this._getStyles.setOverrideStyle(this.props.style);\n\n    this._isMounted = true;\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this._isMounted = false;\n  },\n  render: function render() {\n    var self = this;\n    var containers = null;\n    var notifications = this.state.notifications;\n\n    if (notifications.length) {\n      containers = Object.keys(Constants.positions).map(function (position) {\n        var _notifications = notifications.filter(function (notification) {\n          return position === notification.position;\n        });\n\n        if (!_notifications.length) {\n          return null;\n        }\n\n        return React.createElement(NotificationContainer, {\n          ref: 'container-' + position,\n          key: position,\n          position: position,\n          notifications: _notifications,\n          getStyles: self._getStyles,\n          onRemove: self._didNotificationRemoved,\n          noAnimation: self.props.noAnimation,\n          allowHTML: self.props.allowHTML\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"notifications-wrapper\",\n      style: this._getStyles.wrapper()\n    }, containers);\n  }\n});\nmodule.exports = NotificationSystem;","map":{"version":3,"sources":["/home/mohamed/projects/sap/react-reduction/node_modules/react-notification-system/dist/NotificationSystem.js"],"names":["React","require","createReactClass","PropTypes","merge","NotificationContainer","Constants","Styles","NotificationSystem","uid","_isMounted","_getStyles","overrideStyle","overrideWidth","setOverrideStyle","style","wrapper","Wrapper","container","position","override","Containers","DefaultStyle","width","elements","notification","title","messageWrapper","dismiss","action","actionWrapper","byElement","element","self","level","_element","_didNotificationRemoved","notifications","state","filter","toCheck","setState","onRemove","getInitialState","propTypes","oneOfType","bool","object","noAnimation","allowHTML","getDefaultProps","addNotification","_notification","i","Error","Object","keys","levels","indexOf","isNaN","autoDismiss","positions","toLowerCase","parseInt","ref","length","push","onAdd","getNotificationRef","foundNotification","refs","forEach","removeNotification","_hideNotification","editNotification","newNotification","newNotifications","stateNotification","clearNotifications","componentDidMount","props","componentWillUnmount","render","containers","map","_notifications","createElement","key","getStyles","className","module","exports"],"mappings":"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","sourcesContent":["var React = require('react');\nvar createReactClass = require('create-react-class');\nvar PropTypes = require('prop-types');\nvar merge = require('object-assign');\nvar NotificationContainer = require('./NotificationContainer');\nvar Constants = require('./constants');\nvar Styles = require('./styles');\n\nvar NotificationSystem = createReactClass({\n\n  uid: 3400,\n\n  _isMounted: false,\n\n  _getStyles: {\n    overrideStyle: {},\n\n    overrideWidth: null,\n\n    setOverrideStyle: function(style) {\n      this.overrideStyle = style;\n    },\n\n    wrapper: function() {\n      if (!this.overrideStyle) return {};\n      return merge({}, Styles.Wrapper, this.overrideStyle.Wrapper);\n    },\n\n    container: function(position) {\n      var override = this.overrideStyle.Containers || {};\n      if (!this.overrideStyle) return {};\n\n      this.overrideWidth = Styles.Containers.DefaultStyle.width;\n\n      if (override.DefaultStyle && override.DefaultStyle.width) {\n        this.overrideWidth = override.DefaultStyle.width;\n      }\n\n      if (override[position] && override[position].width) {\n        this.overrideWidth = override[position].width;\n      }\n\n      return merge({}, Styles.Containers.DefaultStyle, Styles.Containers[position], override.DefaultStyle, override[position]);\n    },\n\n    elements: {\n      notification: 'NotificationItem',\n      title: 'Title',\n      messageWrapper: 'MessageWrapper',\n      dismiss: 'Dismiss',\n      action: 'Action',\n      actionWrapper: 'ActionWrapper'\n    },\n\n    byElement: function(element) {\n      var self = this;\n      return function(level) {\n        var _element = self.elements[element];\n        var override = self.overrideStyle[_element] || {};\n        if (!self.overrideStyle) return {};\n        return merge({}, Styles[_element].DefaultStyle, Styles[_element][level], override.DefaultStyle, override[level]);\n      };\n    }\n  },\n\n  _didNotificationRemoved: function(uid) {\n    var notification;\n    var notifications = this.state.notifications.filter(function(toCheck) {\n      if (toCheck.uid === uid) {\n        notification = toCheck;\n        return false;\n      }\n      return true;\n    });\n\n    if (this._isMounted) {\n      this.setState({ notifications: notifications });\n    }\n\n    if (notification && notification.onRemove) {\n      notification.onRemove(notification);\n    }\n  },\n\n  getInitialState: function() {\n    return {\n      notifications: []\n    };\n  },\n\n  propTypes: {\n    style: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.object\n    ]),\n    noAnimation: PropTypes.bool,\n    allowHTML: PropTypes.bool\n  },\n\n  getDefaultProps: function() {\n    return {\n      style: {},\n      noAnimation: false,\n      allowHTML: false\n    };\n  },\n\n  addNotification: function(notification) {\n    var _notification = merge({}, Constants.notification, notification);\n    var notifications = this.state.notifications;\n    var i;\n\n    if (!_notification.level) {\n      throw new Error('notification level is required.');\n    }\n\n    if (Object.keys(Constants.levels).indexOf(_notification.level) === -1) {\n      throw new Error('\\'' + _notification.level + '\\' is not a valid level.');\n    }\n\n    // eslint-disable-next-line\n    if (isNaN(_notification.autoDismiss)) {\n      throw new Error('\\'autoDismiss\\' must be a number.');\n    }\n\n    if (Object.keys(Constants.positions).indexOf(_notification.position) === -1) {\n      throw new Error('\\'' + _notification.position + '\\' is not a valid position.');\n    }\n\n    // Some preparations\n    _notification.position = _notification.position.toLowerCase();\n    _notification.level = _notification.level.toLowerCase();\n    _notification.autoDismiss = parseInt(_notification.autoDismiss, 10);\n\n    _notification.uid = _notification.uid || this.uid;\n    _notification.ref = 'notification-' + _notification.uid;\n    this.uid += 1;\n\n    // do not add if the notification already exists based on supplied uid\n    for (i = 0; i < notifications.length; i += 1) {\n      if (notifications[i].uid === _notification.uid) {\n        return false;\n      }\n    }\n\n    notifications.push(_notification);\n\n    if (typeof _notification.onAdd === 'function') {\n      notification.onAdd(_notification);\n    }\n\n    this.setState({\n      notifications: notifications\n    });\n\n    return _notification;\n  },\n\n  getNotificationRef: function(notification) {\n    var self = this;\n    var foundNotification = null;\n\n    Object.keys(this.refs).forEach(function(container) {\n      if (container.indexOf('container') > -1) {\n        Object.keys(self.refs[container].refs).forEach(function(_notification) {\n          var uid = notification.uid ? notification.uid : notification;\n          if (_notification === 'notification-' + uid) {\n            // NOTE: Stop iterating further and return the found notification.\n            // Since UIDs are uniques and there won't be another notification found.\n            foundNotification = self.refs[container].refs[_notification];\n          }\n        });\n      }\n    });\n\n    return foundNotification;\n  },\n\n  removeNotification: function(notification) {\n    var foundNotification = this.getNotificationRef(notification);\n    return foundNotification && foundNotification._hideNotification();\n  },\n\n  editNotification: function(notification, newNotification) {\n    var foundNotification = null;\n    // NOTE: Find state notification to update by using\n    // `setState` and forcing React to re-render the component.\n    var uid = notification.uid ? notification.uid : notification;\n\n    var newNotifications = this.state.notifications.filter(function(stateNotification) {\n      if (uid === stateNotification.uid) {\n        foundNotification = stateNotification;\n        return false;\n      }\n\n      return true;\n    });\n\n\n    if (!foundNotification) {\n      return;\n    }\n\n    newNotifications.push(merge(\n      {},\n      foundNotification,\n      newNotification\n    ));\n\n    this.setState({\n      notifications: newNotifications\n    });\n  },\n\n  clearNotifications: function() {\n    var self = this;\n    Object.keys(this.refs).forEach(function(container) {\n      if (container.indexOf('container') > -1) {\n        Object.keys(self.refs[container].refs).forEach(function(_notification) {\n          self.refs[container].refs[_notification]._hideNotification();\n        });\n      }\n    });\n  },\n\n  componentDidMount: function() {\n    this._getStyles.setOverrideStyle(this.props.style);\n    this._isMounted = true;\n  },\n\n  componentWillUnmount: function() {\n    this._isMounted = false;\n  },\n\n  render: function() {\n    var self = this;\n    var containers = null;\n    var notifications = this.state.notifications;\n\n    if (notifications.length) {\n      containers = Object.keys(Constants.positions).map(function(position) {\n        var _notifications = notifications.filter(function(notification) {\n          return position === notification.position;\n        });\n\n        if (!_notifications.length) {\n          return null;\n        }\n\n        return (\n          React.createElement(NotificationContainer, {\n            ref:  'container-' + position, \n            key:  position, \n            position:  position, \n            notifications:  _notifications, \n            getStyles:  self._getStyles, \n            onRemove:  self._didNotificationRemoved, \n            noAnimation:  self.props.noAnimation, \n            allowHTML:  self.props.allowHTML}\n          )\n        );\n      });\n    }\n\n\n    return (\n      React.createElement(\"div\", {className: \"notifications-wrapper\", style:  this._getStyles.wrapper() }, \n         containers \n      )\n    );\n  }\n});\n\nmodule.exports = NotificationSystem;\n"]},"metadata":{},"sourceType":"script"}