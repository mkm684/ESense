{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport React from 'react';\nimport { withImmutableProps } from '../utils';\nimport defaultSelectionRenderer from './defaultSelectionRenderer';\nvar styles = {\n  'root': 'Cal__Header__root',\n  'landscape': 'Cal__Header__landscape',\n  'dateWrapper': 'Cal__Header__dateWrapper',\n  'day': 'Cal__Header__day',\n  'wrapper': 'Cal__Header__wrapper',\n  'blank': 'Cal__Header__blank',\n  'active': 'Cal__Header__active',\n  'year': 'Cal__Header__year',\n  'date': 'Cal__Header__date',\n  'range': 'Cal__Header__range'\n};\nexport default withImmutableProps(function (_ref) {\n  var renderSelection = _ref.renderSelection;\n  return {\n    renderSelection: function renderSelection(values, props) {\n      if (!values || !values.start && !values.end) {\n        return null;\n      }\n\n      if (values.start === values.end) {\n        return defaultSelectionRenderer(values.start, props);\n      }\n\n      var dateFormat = props.locale && props.locale.headerFormat || 'MMM Do';\n      return React.createElement('div', {\n        className: styles.range,\n        style: {\n          color: props.theme.headerColor\n        }\n      }, defaultSelectionRenderer(values.start, _extends({}, props, {\n        dateFormat: dateFormat,\n        key: 'start',\n        shouldAnimate: false\n      })), defaultSelectionRenderer(values.end, _extends({}, props, {\n        dateFormat: dateFormat,\n        key: 'end',\n        shouldAnimate: false\n      })));\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"module"}